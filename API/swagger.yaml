swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Trajectware"
  termsOfService: "http://swagger.io/terms/"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "trajectware-0.6"
tags:
- name: "artefact"
  description: "Operations on artefacts"
- name: "person"
  description: "Operations on persons"
- name: "media"
  description: "Operations on media"
schemes:
- "https"
- "http"
paths:
  /artefact/find:
    get:
      tags:
      - "artefact"
      summary: "Find artefacts"
      description: "query after artefacts some criteria"
      operationId: "findArtefact"
      produces:
      - "application/json"
      parameters:
      - name: "tags"
        in: "query"
        description: "Tags to filter by"
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "CPU"
          - "IHM"
          - "Micro"
          - "OS"
          - "APP"
          - "..."
      - name: "startDate"
        in: "query"
        description: "start of date range"
        type: "string"
      - name: "endDate"
        in: "query"
        description: "end of date range"
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Artefact"
        "400":
          description: "Invalid tag value"
      security:
      - api_key: []
  /artefact/{artefactId}:
    get:
      tags:
      - "artefact"
      summary: "Find an artefact by its ID"
      description: "Returns only one artefact"
      operationId: "getArtefactById"
      produces:
      - "application/json"
      parameters:
      - name: "artefactId"
        in: "path"
        description: "the ID of the invention that need to be returned"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Artefact"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "the invention has not been found"
      security:
      - api_key: []
  /person/find:
    get:
      tags:
      - "person"
      summary: "Find persons"
      description: "query after persons using some criteria"
      operationId: "findPersons"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        type: "string"
        collectionFormat: "multi"
      - name: "gender"
        in: "query"
        description: "Tags to filter by"
        type: "string"
        enum:
          - "Male"
          - "Female"
      - name: "country"
        in: "query"
        description: "Tags to filter by"
        type: "array"
        items:
          type: "string"
          enum:
          - "GB"
          - "US"
          - "FR"
          - "CA"
          - "BE"
      - name: "expo"
        in: "query"
        description: "Tags to filter by"
        type: "array"
        items:
          type: "string"
          enum:
          - "permanent"
          - "temporary"
          - "both"
          - "none"
      - name: "company"
        in: "query"
        description: "Tags to filter by"
        type: "array"
        items:
          type: "string"
          enum:
          - "apple"
          - "google"
          - "microsoft"
          - "samsung"
      - name: "startDate"
        in: "query"
        description: "start of date range"
        type: "string"
      - name: "endDate"
        in: "query"
        description: "end of date range"
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Person"
        "400":
          description: "Invalid status value"
      security:
      - api_key: []
  /person/{personId}:
    get:
      tags:
      - "person"
      summary: "Find an person by its ID"
      description: "Returns only one person"
      operationId: "getPersonById"
      produces:
      - "application/json"
      parameters:
      - name: "personId"
        in: "path"
        description: "the ID of the person that need to be returned"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Person"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "the person has not been found"
      security:
      - api_key: []
  /media/image/{fileId}:
    get:
      tags:
      - "media"
      summary: "Find a picture by its ID"
      description: "Returns only one file"
      operationId: "getImageById"
      produces:
      - "image/jpg"
      - "image/png"
      parameters:
      - name: "fileId"
        in: "path"
        description: "the ID of the image that need to be returned"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
        "403":
          description: "Access forbidden"
        "404":
          description: "the event has not been found"
      security:
      - api_key: []
  /media/audio/{fileId}:
    get:
      tags:
      - "media"
      summary: "Find an audio by its ID"
      description: "Returns only one file"
      operationId: "getAudioById"
      produces:
      - "audio/m4a"
      parameters:
      - name: "fileId"
        in: "path"
        description: "the ID of the audio that need to be returned"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
        "403":
          description: "Access forbidden"
        "404":
          description: "the event has not been found"
      security:
      - api_key: []
  /media/video/{fileId}:
    get:
      tags:
      - "media"
      summary: "Find a video by its ID"
      description: "Returns only one file"
      operationId: "getVideoById"
      produces:
      - "video/MP4"
      parameters:
      - name: "fileId"
        in: "path"
        description: "the ID of the video that need to be returned"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
        "403":
          description: "Access forbidden"
        "404":
          description: "the event has not been found"
      security:
      - api_key: []
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"

definitions:
  Artefact:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "object ID"
      name:
        type: "string"
        example: "commodore64"
      description:
        type: "string"
        example: "emblematic micro from the 80's"
      creationdate:
        type: "string"
        example: "1982"
      country:
        type: "string"
        example: "USA"
      company:
        type: "string"
        example: "Commodore Business Machines Inc."
      photos:
        type: "array"
        items:
          type: "string"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag" 
  Person:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      lastname:
        type: "string"
        example: "Gates"
      firstname:
        type: "string"
        example: "Bill"
      gender:
        type: "string"
        example: "Male"
      birthdate: 
        type: "string"
        description: "when the inventor is born"
        example: "1955"
      deathdate: 
        type: "string"
        description: "when the inventor died (if dead) or NA"
        example: "NA"
      country:
        type: "string"
        description: "the nationality of the inventor"
        example: "USA"
      description:
        type: "string"
        example: "William Henry Gates III (born October 28, 1955) is an American business magnate, software developer, investor, author, and philanthropist. He is a co-founder of Microsoft, along with his late childhood friend Paul Allen. During his career at Microsoft, Gates held the positions of chairman, chief executive officer (CEO), president and chief software architect, while also being the largest individual shareholder until May 2014. He was a major entrepreneur of the microcomputer revolution of the 1970s and 1980s."
      education:
        type: "string"
        example: "engineer"
      function:
        type: "string"
        example: "Software developper"
      company:
        type: "string"
        example: "Microsoft"
      photos:
        type: "array"
        items:
          $ref: "#/definitions/File"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"       
  Tag:
    type: "object"
    properties:
      id: 
        type: string
        example: "CPU"
      description:
        type: string
        example: "A CPU or Central Processing Unit is ..."
  File:
    type: "object"
    properties:
      id:
        type: "string"
        example: "<id-object>-<id-file>.jpg ou .png"
      name:
        type: "string"

